//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PropertyService.BO
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EPropertyEntities : DbContext
    {
        public EPropertyEntities()
            : base("name=EPropertyEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AccountChart> AccountChart { get; set; }
        public virtual DbSet<AccountType> AccountType { get; set; }
        public virtual DbSet<AddIncome> AddIncome { get; set; }
        public virtual DbSet<BillPayment> BillPayment { get; set; }
        public virtual DbSet<CAMExpense> CAMExpense { get; set; }
        public virtual DbSet<Child> Child { get; set; }
        public virtual DbSet<Cities> Cities { get; set; }
        public virtual DbSet<Cities_extended> Cities_extended { get; set; }
        public virtual DbSet<Communication> Communication { get; set; }
        public virtual DbSet<communicationPanel> communicationPanel { get; set; }
        public virtual DbSet<ContactInformation> ContactInformation { get; set; }
        public virtual DbSet<Country> Country { get; set; }
        public virtual DbSet<Dealer_SalesPartner> Dealer_SalesPartner { get; set; }
        public virtual DbSet<Dealer_SalesPartner_DetailsZipCodeCoverage> Dealer_SalesPartner_DetailsZipCodeCoverage { get; set; }
        public virtual DbSet<DefaultSpecs> DefaultSpecs { get; set; }
        public virtual DbSet<EventManagement> EventManagement { get; set; }
        public virtual DbSet<FinancialTransaction> FinancialTransaction { get; set; }
        public virtual DbSet<Global_WebPage_Setup> Global_WebPage_Setup { get; set; }
        public virtual DbSet<Location> Location { get; set; }
        public virtual DbSet<MakeBillPayment> MakeBillPayment { get; set; }
        public virtual DbSet<Master> Master { get; set; }
        public virtual DbSet<MonthlyBatchRentalInvoice> MonthlyBatchRentalInvoice { get; set; }
        public virtual DbSet<OwnerProfile> OwnerProfile { get; set; }
        public virtual DbSet<PaymentHistory> PaymentHistory { get; set; }
        public virtual DbSet<PaymentInformation> PaymentInformation { get; set; }
        public virtual DbSet<PropertyManagerProfile> PropertyManagerProfile { get; set; }
        public virtual DbSet<RecordABill> RecordABill { get; set; }
        public virtual DbSet<RecordABillDetails> RecordABillDetails { get; set; }
        public virtual DbSet<RecordInvoice> RecordInvoice { get; set; }
        public virtual DbSet<RecordInvoiceDetails> RecordInvoiceDetails { get; set; }
        public virtual DbSet<RefCountries> RefCountries { get; set; }
        public virtual DbSet<RefStates> RefStates { get; set; }
        public virtual DbSet<RelationShip> RelationShip { get; set; }
        public virtual DbSet<ResidentalDocumentListOfRental> ResidentalDocumentListOfRental { get; set; }
        public virtual DbSet<ResidentalDocumentListOfRentalAdd_Step2_Page4_Tenant> ResidentalDocumentListOfRentalAdd_Step2_Page4_Tenant { get; set; }
        public virtual DbSet<Residential_Tenant_Add_Step2_Page2_EmergencyContacts> Residential_Tenant_Add_Step2_Page2_EmergencyContacts { get; set; }
        public virtual DbSet<Residential_Tenant_Add_Step2_Page2_PeopleStayingUnit> Residential_Tenant_Add_Step2_Page2_PeopleStayingUnit { get; set; }
        public virtual DbSet<Residential_Tenant_Add_Step2_Page2_Vehicles> Residential_Tenant_Add_Step2_Page2_Vehicles { get; set; }
        public virtual DbSet<Residential_Tenant_Add_Step2_Page3_GeneralInformation> Residential_Tenant_Add_Step2_Page3_GeneralInformation { get; set; }
        public virtual DbSet<Residential_Tenant_Add_Step2_Page4_AdditionalDocument> Residential_Tenant_Add_Step2_Page4_AdditionalDocument { get; set; }
        public virtual DbSet<Residential_Tenant_Add_Step2_Page4_Signature> Residential_Tenant_Add_Step2_Page4_Signature { get; set; }
        public virtual DbSet<Residential_Tenant_Add_Step2_Page4_VerityIncome> Residential_Tenant_Add_Step2_Page4_VerityIncome { get; set; }
        public virtual DbSet<Residential_Tenant_Add_Step2_ResidenceHistory> Residential_Tenant_Add_Step2_ResidenceHistory { get; set; }
        public virtual DbSet<Residential_Tenant_Add_Step4_DocumentList> Residential_Tenant_Add_Step4_DocumentList { get; set; }
        public virtual DbSet<Residential_Tenant_Add_Step4_Owner_Signature> Residential_Tenant_Add_Step4_Owner_Signature { get; set; }
        public virtual DbSet<Residential_Tenant_Add_Step4_Signature> Residential_Tenant_Add_Step4_Signature { get; set; }
        public virtual DbSet<Residential_Tenant_App_Step2_AgreementNameOf> Residential_Tenant_App_Step2_AgreementNameOf { get; set; }
        public virtual DbSet<Residential_Tenant_App_Step2_EmployeeInfo> Residential_Tenant_App_Step2_EmployeeInfo { get; set; }
        public virtual DbSet<Residential_Tenant_App_Step2_Reference> Residential_Tenant_App_Step2_Reference { get; set; }
        public virtual DbSet<Residential_Tenant_Application_Step1> Residential_Tenant_Application_Step1 { get; set; }
        public virtual DbSet<ResidentialAddTemplate_StepCount> ResidentialAddTemplate_StepCount { get; set; }
        public virtual DbSet<ResidentialCommunication> ResidentialCommunication { get; set; }
        public virtual DbSet<ResidentialDocument> ResidentialDocument { get; set; }
        public virtual DbSet<ResidentialMaintainesManagerImage> ResidentialMaintainesManagerImage { get; set; }
        public virtual DbSet<ResidentialMaintainesManagerMaster> ResidentialMaintainesManagerMaster { get; set; }
        public virtual DbSet<ResidentialMaintainesManagerPartData> ResidentialMaintainesManagerPartData { get; set; }
        public virtual DbSet<ResidentialMaintainesManagerSchedule> ResidentialMaintainesManagerSchedule { get; set; }
        public virtual DbSet<ResidentialMaintainesManagerVandorData> ResidentialMaintainesManagerVandorData { get; set; }
        public virtual DbSet<ResidentialTenantSignIn> ResidentialTenantSignIn { get; set; }
        public virtual DbSet<ResidentialUnit> ResidentialUnit { get; set; }
        public virtual DbSet<ResidentialUnitEquipment> ResidentialUnitEquipment { get; set; }
        public virtual DbSet<ResidentialUnitEquipmentImage> ResidentialUnitEquipmentImage { get; set; }
        public virtual DbSet<ResidentialUnitSpecs> ResidentialUnitSpecs { get; set; }
        public virtual DbSet<ResidentialUnitSpecsChild> ResidentialUnitSpecsChild { get; set; }
        public virtual DbSet<ResidentialUnitWebImage> ResidentialUnitWebImage { get; set; }
        public virtual DbSet<ResidentialUnitWebImageChild> ResidentialUnitWebImageChild { get; set; }
        public virtual DbSet<ResidentialUnitWebImageVideo> ResidentialUnitWebImageVideo { get; set; }
        public virtual DbSet<Showing_Database> Showing_Database { get; set; }
        public virtual DbSet<States> States { get; set; }
        public virtual DbSet<SystemInformation> SystemInformation { get; set; }
        public virtual DbSet<TenantOnlineFee> TenantOnlineFee { get; set; }
        public virtual DbSet<TenantPaymentHistory> TenantPaymentHistory { get; set; }
        public virtual DbSet<TenantRentalFee> TenantRentalFee { get; set; }
        public virtual DbSet<TenantRentalFee_Residential> TenantRentalFee_Residential { get; set; }
        public virtual DbSet<UserProfile> UserProfile { get; set; }
        public virtual DbSet<UserType> UserType { get; set; }
        public virtual DbSet<VendorProfile> VendorProfile { get; set; }
        public virtual DbSet<WorkOrder> WorkOrder { get; set; }
        public virtual DbSet<WorkOrderPartData> WorkOrderPartData { get; set; }
        public virtual DbSet<XMLOperationStatus> XMLOperationStatus { get; set; }
        public virtual DbSet<GlobalID> GlobalID { get; set; }
        public virtual DbSet<Residential_Tenant_Add_Step2_Page2_CreditHistory_New> Residential_Tenant_Add_Step2_Page2_CreditHistory_New { get; set; }
    
        public virtual ObjectResult<Get_AddIncomeInitial_Data_Result> Get_AddIncomeInitial_Data(string ownerId)
        {
            var ownerIdParameter = ownerId != null ?
                new ObjectParameter("OwnerId", ownerId) :
                new ObjectParameter("OwnerId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_AddIncomeInitial_Data_Result>("Get_AddIncomeInitial_Data", ownerIdParameter);
        }
    
        public virtual ObjectResult<Get_EventManagement_Data_Result> Get_EventManagement_Data(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> todate, string ownerId, string propertyManagerId, string locationId, string unitId, string filter)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));
    
            var ownerIdParameter = ownerId != null ?
                new ObjectParameter("OwnerId", ownerId) :
                new ObjectParameter("OwnerId", typeof(string));
    
            var propertyManagerIdParameter = propertyManagerId != null ?
                new ObjectParameter("PropertyManagerId", propertyManagerId) :
                new ObjectParameter("PropertyManagerId", typeof(string));
    
            var locationIdParameter = locationId != null ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(string));
    
            var unitIdParameter = unitId != null ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("filter", filter) :
                new ObjectParameter("filter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_EventManagement_Data_Result>("Get_EventManagement_Data", fromDateParameter, todateParameter, ownerIdParameter, propertyManagerIdParameter, locationIdParameter, unitIdParameter, filterParameter);
        }
    
        public virtual ObjectResult<Get_TenantInformation_Result> Get_TenantInformation(string serialId)
        {
            var serialIdParameter = serialId != null ?
                new ObjectParameter("SerialId", serialId) :
                new ObjectParameter("SerialId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_TenantInformation_Result>("Get_TenantInformation", serialIdParameter);
        }
    
        public virtual ObjectResult<GetDealerCommissionRateByUnitId_Result> GetDealerCommissionRateByUnitId(string unitserial)
        {
            var unitserialParameter = unitserial != null ?
                new ObjectParameter("unitserial", unitserial) :
                new ObjectParameter("unitserial", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDealerCommissionRateByUnitId_Result>("GetDealerCommissionRateByUnitId", unitserialParameter);
        }
    
        public virtual ObjectResult<GetDealerSalesAccounts_Result> GetDealerSalesAccounts(string ownerId)
        {
            var ownerIdParameter = ownerId != null ?
                new ObjectParameter("OwnerId", ownerId) :
                new ObjectParameter("OwnerId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDealerSalesAccounts_Result>("GetDealerSalesAccounts", ownerIdParameter);
        }
    
        public virtual ObjectResult<GetEventManagementDashboardTableInfo_Result> GetEventManagementDashboardTableInfo(string ownerId, string propertyManagerId, string locationId, string unitId)
        {
            var ownerIdParameter = ownerId != null ?
                new ObjectParameter("OwnerId", ownerId) :
                new ObjectParameter("OwnerId", typeof(string));
    
            var propertyManagerIdParameter = propertyManagerId != null ?
                new ObjectParameter("PropertyManagerId", propertyManagerId) :
                new ObjectParameter("PropertyManagerId", typeof(string));
    
            var locationIdParameter = locationId != null ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(string));
    
            var unitIdParameter = unitId != null ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEventManagementDashboardTableInfo_Result>("GetEventManagementDashboardTableInfo", ownerIdParameter, propertyManagerIdParameter, locationIdParameter, unitIdParameter);
        }
    
        public virtual ObjectResult<GetOwnerDashboardData_Result> GetOwnerDashboardData(string ownerId)
        {
            var ownerIdParameter = ownerId != null ?
                new ObjectParameter("OwnerId", ownerId) :
                new ObjectParameter("OwnerId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOwnerDashboardData_Result>("GetOwnerDashboardData", ownerIdParameter);
        }
    
        public virtual ObjectResult<GetSalesPartnerCommissionRateByUnitId_Result> GetSalesPartnerCommissionRateByUnitId(string unitserial)
        {
            var unitserialParameter = unitserial != null ?
                new ObjectParameter("unitserial", unitserial) :
                new ObjectParameter("unitserial", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSalesPartnerCommissionRateByUnitId_Result>("GetSalesPartnerCommissionRateByUnitId", unitserialParameter);
        }
    
        public virtual int SP_GetID(string objectID, string itemID, Nullable<int> iDForYear, Nullable<int> iDForMonth, Nullable<System.DateTime> iDForDate, ObjectParameter newID)
        {
            var objectIDParameter = objectID != null ?
                new ObjectParameter("ObjectID", objectID) :
                new ObjectParameter("ObjectID", typeof(string));
    
            var itemIDParameter = itemID != null ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(string));
    
            var iDForYearParameter = iDForYear.HasValue ?
                new ObjectParameter("IDForYear", iDForYear) :
                new ObjectParameter("IDForYear", typeof(int));
    
            var iDForMonthParameter = iDForMonth.HasValue ?
                new ObjectParameter("IDForMonth", iDForMonth) :
                new ObjectParameter("IDForMonth", typeof(int));
    
            var iDForDateParameter = iDForDate.HasValue ?
                new ObjectParameter("IDForDate", iDForDate) :
                new ObjectParameter("IDForDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetID", objectIDParameter, itemIDParameter, iDForYearParameter, iDForMonthParameter, iDForDateParameter, newID);
        }
    
        public virtual int SP_updateRecidentialWebImageIsUsedByUnitId(string residentialUnitId)
        {
            var residentialUnitIdParameter = residentialUnitId != null ?
                new ObjectParameter("ResidentialUnitId", residentialUnitId) :
                new ObjectParameter("ResidentialUnitId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_updateRecidentialWebImageIsUsedByUnitId", residentialUnitIdParameter);
        }
    
        public virtual int usp_DuplicateUnit(Nullable<int> id, string oldUnitId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var oldUnitIdParameter = oldUnitId != null ?
                new ObjectParameter("oldUnitId", oldUnitId) :
                new ObjectParameter("oldUnitId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DuplicateUnit", idParameter, oldUnitIdParameter);
        }
    
        public virtual ObjectResult<usp_GetAllTenantDataByTenanrId_ResidentialId_Result> usp_GetAllTenantDataByTenanrId_ResidentialId(string residentialId, string tenantId)
        {
            var residentialIdParameter = residentialId != null ?
                new ObjectParameter("ResidentialId", residentialId) :
                new ObjectParameter("ResidentialId", typeof(string));
    
            var tenantIdParameter = tenantId != null ?
                new ObjectParameter("TenantId", tenantId) :
                new ObjectParameter("TenantId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetAllTenantDataByTenanrId_ResidentialId_Result>("usp_GetAllTenantDataByTenanrId_ResidentialId", residentialIdParameter, tenantIdParameter);
        }
    
        public virtual ObjectResult<usp_GetBalanceSheetData_Result> usp_GetBalanceSheetData(Nullable<System.DateTime> createdate, string ownerId)
        {
            var createdateParameter = createdate.HasValue ?
                new ObjectParameter("createdate", createdate) :
                new ObjectParameter("createdate", typeof(System.DateTime));
    
            var ownerIdParameter = ownerId != null ?
                new ObjectParameter("OwnerId", ownerId) :
                new ObjectParameter("OwnerId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetBalanceSheetData_Result>("usp_GetBalanceSheetData", createdateParameter, ownerIdParameter);
        }
    
        public virtual ObjectResult<usp_GetEquipmentListByUnitId_PropertyManager_LocationId_Result> usp_GetEquipmentListByUnitId_PropertyManager_LocationId(Nullable<int> id, string ownerId, string propertyManagerId, string locationId, string unitId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var ownerIdParameter = ownerId != null ?
                new ObjectParameter("OwnerId", ownerId) :
                new ObjectParameter("OwnerId", typeof(string));
    
            var propertyManagerIdParameter = propertyManagerId != null ?
                new ObjectParameter("PropertyManagerId", propertyManagerId) :
                new ObjectParameter("PropertyManagerId", typeof(string));
    
            var locationIdParameter = locationId != null ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(string));
    
            var unitIdParameter = unitId != null ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetEquipmentListByUnitId_PropertyManager_LocationId_Result>("usp_GetEquipmentListByUnitId_PropertyManager_LocationId", idParameter, ownerIdParameter, propertyManagerIdParameter, locationIdParameter, unitIdParameter);
        }
    
        public virtual ObjectResult<usp_GetMessage_Result> usp_GetMessage(string fromuser, string toUser, string unidId, string monthName, string requestType)
        {
            var fromuserParameter = fromuser != null ?
                new ObjectParameter("fromuser", fromuser) :
                new ObjectParameter("fromuser", typeof(string));
    
            var toUserParameter = toUser != null ?
                new ObjectParameter("toUser", toUser) :
                new ObjectParameter("toUser", typeof(string));
    
            var unidIdParameter = unidId != null ?
                new ObjectParameter("unidId", unidId) :
                new ObjectParameter("unidId", typeof(string));
    
            var monthNameParameter = monthName != null ?
                new ObjectParameter("MonthName", monthName) :
                new ObjectParameter("MonthName", typeof(string));
    
            var requestTypeParameter = requestType != null ?
                new ObjectParameter("RequestType", requestType) :
                new ObjectParameter("RequestType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetMessage_Result>("usp_GetMessage", fromuserParameter, toUserParameter, unidIdParameter, monthNameParameter, requestTypeParameter);
        }
    
        public virtual ObjectResult<usp_GetMessage_Owner_Result> usp_GetMessage_Owner(string fromuser, string unidId, string requestType, string senderId)
        {
            var fromuserParameter = fromuser != null ?
                new ObjectParameter("fromuser", fromuser) :
                new ObjectParameter("fromuser", typeof(string));
    
            var unidIdParameter = unidId != null ?
                new ObjectParameter("unidId", unidId) :
                new ObjectParameter("unidId", typeof(string));
    
            var requestTypeParameter = requestType != null ?
                new ObjectParameter("RequestType", requestType) :
                new ObjectParameter("RequestType", typeof(string));
    
            var senderIdParameter = senderId != null ?
                new ObjectParameter("SenderId", senderId) :
                new ObjectParameter("SenderId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetMessage_Owner_Result>("usp_GetMessage_Owner", fromuserParameter, unidIdParameter, requestTypeParameter, senderIdParameter);
        }
    
        public virtual ObjectResult<usp_GetOwnerPropertyManagerAndLocationInfo_UnitId_Result> usp_GetOwnerPropertyManagerAndLocationInfo_UnitId(string unitId)
        {
            var unitIdParameter = unitId != null ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetOwnerPropertyManagerAndLocationInfo_UnitId_Result>("usp_GetOwnerPropertyManagerAndLocationInfo_UnitId", unitIdParameter);
        }
    
        public virtual ObjectResult<usp_GetRecordABillByDate_Result> usp_GetRecordABillByDate(string fromDate, string toDate)
        {
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetRecordABillByDate_Result>("usp_GetRecordABillByDate", fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<usp_GetResidentialFeatureSpecs_Result> usp_GetResidentialFeatureSpecs(string residentialunit)
        {
            var residentialunitParameter = residentialunit != null ?
                new ObjectParameter("Residentialunit", residentialunit) :
                new ObjectParameter("Residentialunit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetResidentialFeatureSpecs_Result>("usp_GetResidentialFeatureSpecs", residentialunitParameter);
        }
    
        public virtual ObjectResult<usp_GetsenderName_Result> usp_GetsenderName(string ownerId)
        {
            var ownerIdParameter = ownerId != null ?
                new ObjectParameter("OwnerId", ownerId) :
                new ObjectParameter("OwnerId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetsenderName_Result>("usp_GetsenderName", ownerIdParameter);
        }
    
        public virtual ObjectResult<usp_GetSerialId_UnitId_Result> usp_GetSerialId_UnitId(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSerialId_UnitId_Result>("usp_GetSerialId_UnitId", idParameter);
        }
    
        public virtual ObjectResult<usp_GetTenantApplication_Result> usp_GetTenantApplication(string ownerId, string propertyManagerId, string locationId, string unitId, string tenantId)
        {
            var ownerIdParameter = ownerId != null ?
                new ObjectParameter("OwnerId", ownerId) :
                new ObjectParameter("OwnerId", typeof(string));
    
            var propertyManagerIdParameter = propertyManagerId != null ?
                new ObjectParameter("PropertyManagerId", propertyManagerId) :
                new ObjectParameter("PropertyManagerId", typeof(string));
    
            var locationIdParameter = locationId != null ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(string));
    
            var unitIdParameter = unitId != null ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(string));
    
            var tenantIdParameter = tenantId != null ?
                new ObjectParameter("TenantId", tenantId) :
                new ObjectParameter("TenantId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetTenantApplication_Result>("usp_GetTenantApplication", ownerIdParameter, propertyManagerIdParameter, locationIdParameter, unitIdParameter, tenantIdParameter);
        }
    
        public virtual ObjectResult<usp_GetTenantListOfDocumentByUnitId_Result> usp_GetTenantListOfDocumentByUnitId(string unitId, string tenantId)
        {
            var unitIdParameter = unitId != null ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(string));
    
            var tenantIdParameter = tenantId != null ?
                new ObjectParameter("tenantId", tenantId) :
                new ObjectParameter("tenantId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetTenantListOfDocumentByUnitId_Result>("usp_GetTenantListOfDocumentByUnitId", unitIdParameter, tenantIdParameter);
        }
    
        public virtual ObjectResult<usp_GetTenantListOfDocumentByUnitId_new_Result> usp_GetTenantListOfDocumentByUnitId_new(string unitId, string tenantId)
        {
            var unitIdParameter = unitId != null ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(string));
    
            var tenantIdParameter = tenantId != null ?
                new ObjectParameter("tenantId", tenantId) :
                new ObjectParameter("tenantId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetTenantListOfDocumentByUnitId_new_Result>("usp_GetTenantListOfDocumentByUnitId_new", unitIdParameter, tenantIdParameter);
        }
    
        public virtual ObjectResult<usp_GetTenantListOfDocumentByUnitId_SignDeposit_Result> usp_GetTenantListOfDocumentByUnitId_SignDeposit(string unitId, string tenantId)
        {
            var unitIdParameter = unitId != null ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(string));
    
            var tenantIdParameter = tenantId != null ?
                new ObjectParameter("tenantId", tenantId) :
                new ObjectParameter("tenantId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetTenantListOfDocumentByUnitId_SignDeposit_Result>("usp_GetTenantListOfDocumentByUnitId_SignDeposit", unitIdParameter, tenantIdParameter);
        }
    
        public virtual ObjectResult<usp_GetTenantListOfDocumentByUnitId_SignDeposit_New_Result> usp_GetTenantListOfDocumentByUnitId_SignDeposit_New(string unitId, string tenantId)
        {
            var unitIdParameter = unitId != null ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(string));
    
            var tenantIdParameter = tenantId != null ?
                new ObjectParameter("tenantId", tenantId) :
                new ObjectParameter("tenantId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetTenantListOfDocumentByUnitId_SignDeposit_New_Result>("usp_GetTenantListOfDocumentByUnitId_SignDeposit_New", unitIdParameter, tenantIdParameter);
        }
    
        public virtual ObjectResult<usp_GetTenantProfileInfo_Result> usp_GetTenantProfileInfo(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetTenantProfileInfo_Result>("usp_GetTenantProfileInfo", idParameter);
        }
    
        public virtual ObjectResult<string> usp_GetUnitId(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_GetUnitId", idParameter);
        }
    
        public virtual ObjectResult<Usp_GetWebAnalyticsBarChartData_Result> Usp_GetWebAnalyticsBarChartData(string ownerId, string propertyManagerId, string locationId, string unitId)
        {
            var ownerIdParameter = ownerId != null ?
                new ObjectParameter("OwnerId", ownerId) :
                new ObjectParameter("OwnerId", typeof(string));
    
            var propertyManagerIdParameter = propertyManagerId != null ?
                new ObjectParameter("PropertyManagerId", propertyManagerId) :
                new ObjectParameter("PropertyManagerId", typeof(string));
    
            var locationIdParameter = locationId != null ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(string));
    
            var unitIdParameter = unitId != null ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetWebAnalyticsBarChartData_Result>("Usp_GetWebAnalyticsBarChartData", ownerIdParameter, propertyManagerIdParameter, locationIdParameter, unitIdParameter);
        }
    
        public virtual ObjectResult<Usp_GetWebAnalyticsData_Result> Usp_GetWebAnalyticsData(string ownerId, string propertyManagerId, string locationId, string unitId, Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var ownerIdParameter = ownerId != null ?
                new ObjectParameter("OwnerId", ownerId) :
                new ObjectParameter("OwnerId", typeof(string));
    
            var propertyManagerIdParameter = propertyManagerId != null ?
                new ObjectParameter("PropertyManagerId", propertyManagerId) :
                new ObjectParameter("PropertyManagerId", typeof(string));
    
            var locationIdParameter = locationId != null ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(string));
    
            var unitIdParameter = unitId != null ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetWebAnalyticsData_Result>("Usp_GetWebAnalyticsData", ownerIdParameter, propertyManagerIdParameter, locationIdParameter, unitIdParameter, fromParameter, toParameter);
        }
    
        public virtual int usp_SaveCredit_Vehicle_PeopleUnit(ObjectParameter mass, ObjectParameter error)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SaveCredit_Vehicle_PeopleUnit", mass, error);
        }
    
        public virtual ObjectResult<string> usp_SetScheduleWork_New(string ownerId, string propertyManagerId, string locationId, string unitId, string title, string dESCRIPTION, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var ownerIdParameter = ownerId != null ?
                new ObjectParameter("OwnerId", ownerId) :
                new ObjectParameter("OwnerId", typeof(string));
    
            var propertyManagerIdParameter = propertyManagerId != null ?
                new ObjectParameter("PropertyManagerId", propertyManagerId) :
                new ObjectParameter("PropertyManagerId", typeof(string));
    
            var locationIdParameter = locationId != null ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(string));
    
            var unitIdParameter = unitId != null ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_SetScheduleWork_New", ownerIdParameter, propertyManagerIdParameter, locationIdParameter, unitIdParameter, titleParameter, dESCRIPTIONParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int usp_SetScheduleWork_New_Delete(string ownerId, string propertyManagerId, string locationId, string unitId)
        {
            var ownerIdParameter = ownerId != null ?
                new ObjectParameter("OwnerId", ownerId) :
                new ObjectParameter("OwnerId", typeof(string));
    
            var propertyManagerIdParameter = propertyManagerId != null ?
                new ObjectParameter("PropertyManagerId", propertyManagerId) :
                new ObjectParameter("PropertyManagerId", typeof(string));
    
            var locationIdParameter = locationId != null ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(string));
    
            var unitIdParameter = unitId != null ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SetScheduleWork_New_Delete", ownerIdParameter, propertyManagerIdParameter, locationIdParameter, unitIdParameter);
        }
    
        public virtual int usp_SetStepValue(string tenantId, string unitId, string resientialType)
        {
            var tenantIdParameter = tenantId != null ?
                new ObjectParameter("TenantId", tenantId) :
                new ObjectParameter("TenantId", typeof(string));
    
            var unitIdParameter = unitId != null ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(string));
    
            var resientialTypeParameter = resientialType != null ?
                new ObjectParameter("ResientialType", resientialType) :
                new ObjectParameter("ResientialType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SetStepValue", tenantIdParameter, unitIdParameter, resientialTypeParameter);
        }
    
        public virtual ObjectResult<uspGetCommunicationGridData_Result> uspGetCommunicationGridData(string propertyManagerSerialId)
        {
            var propertyManagerSerialIdParameter = propertyManagerSerialId != null ?
                new ObjectParameter("PropertyManagerSerialId", propertyManagerSerialId) :
                new ObjectParameter("PropertyManagerSerialId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetCommunicationGridData_Result>("uspGetCommunicationGridData", propertyManagerSerialIdParameter);
        }
    }
}
